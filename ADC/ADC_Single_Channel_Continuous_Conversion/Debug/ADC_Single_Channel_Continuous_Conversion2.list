
ADC_Single_Channel_Continuous_Conversion2.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  4 .ARM          00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003b8  080003b8  000103b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003bc  080003bc  000103bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000000  080003c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  080003c0  00020028  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000103c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   000005b0  00000000  00000000  000103f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001bb  00000000  00000000  000109a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00010b60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  00010bd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019975  00000000  00000000  00010c28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ccd  00000000  00000000  0002a59d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008ef77  00000000  00000000  0002b26a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ba1e1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000c8  00000000  00000000  000ba234  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080003a0 	.word	0x080003a0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080003a0 	.word	0x080003a0

08000204 <pa1_adc_init>:
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
 8000208:	4b14      	ldr	r3, [pc, #80]	; (800025c <pa1_adc_init+0x58>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a13      	ldr	r2, [pc, #76]	; (800025c <pa1_adc_init+0x58>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
 8000214:	4b12      	ldr	r3, [pc, #72]	; (8000260 <pa1_adc_init+0x5c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a11      	ldr	r2, [pc, #68]	; (8000260 <pa1_adc_init+0x5c>)
 800021a:	f043 0304 	orr.w	r3, r3, #4
 800021e:	6013      	str	r3, [r2, #0]
 8000220:	4b0f      	ldr	r3, [pc, #60]	; (8000260 <pa1_adc_init+0x5c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a0e      	ldr	r2, [pc, #56]	; (8000260 <pa1_adc_init+0x5c>)
 8000226:	f043 0308 	orr.w	r3, r3, #8
 800022a:	6013      	str	r3, [r2, #0]
 800022c:	4b0b      	ldr	r3, [pc, #44]	; (800025c <pa1_adc_init+0x58>)
 800022e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000230:	4a0a      	ldr	r2, [pc, #40]	; (800025c <pa1_adc_init+0x58>)
 8000232:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000236:	6453      	str	r3, [r2, #68]	; 0x44
 8000238:	4b0a      	ldr	r3, [pc, #40]	; (8000264 <pa1_adc_init+0x60>)
 800023a:	2201      	movs	r2, #1
 800023c:	635a      	str	r2, [r3, #52]	; 0x34
 800023e:	4b09      	ldr	r3, [pc, #36]	; (8000264 <pa1_adc_init+0x60>)
 8000240:	2200      	movs	r2, #0
 8000242:	62da      	str	r2, [r3, #44]	; 0x2c
 8000244:	4b07      	ldr	r3, [pc, #28]	; (8000264 <pa1_adc_init+0x60>)
 8000246:	689b      	ldr	r3, [r3, #8]
 8000248:	4a06      	ldr	r2, [pc, #24]	; (8000264 <pa1_adc_init+0x60>)
 800024a:	f043 0301 	orr.w	r3, r3, #1
 800024e:	6093      	str	r3, [r2, #8]
 8000250:	bf00      	nop
 8000252:	46bd      	mov	sp, r7
 8000254:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000258:	4770      	bx	lr
 800025a:	bf00      	nop
 800025c:	40023800 	.word	0x40023800
 8000260:	40020000 	.word	0x40020000
 8000264:	40012000 	.word	0x40012000

08000268 <start_conversion>:
 8000268:	b480      	push	{r7}
 800026a:	af00      	add	r7, sp, #0
 800026c:	4b08      	ldr	r3, [pc, #32]	; (8000290 <start_conversion+0x28>)
 800026e:	689b      	ldr	r3, [r3, #8]
 8000270:	4a07      	ldr	r2, [pc, #28]	; (8000290 <start_conversion+0x28>)
 8000272:	f043 0302 	orr.w	r3, r3, #2
 8000276:	6093      	str	r3, [r2, #8]
 8000278:	4b05      	ldr	r3, [pc, #20]	; (8000290 <start_conversion+0x28>)
 800027a:	689b      	ldr	r3, [r3, #8]
 800027c:	4a04      	ldr	r2, [pc, #16]	; (8000290 <start_conversion+0x28>)
 800027e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000282:	6093      	str	r3, [r2, #8]
 8000284:	bf00      	nop
 8000286:	46bd      	mov	sp, r7
 8000288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop
 8000290:	40012000 	.word	0x40012000

08000294 <adc_read>:
 8000294:	b480      	push	{r7}
 8000296:	af00      	add	r7, sp, #0
 8000298:	bf00      	nop
 800029a:	4b06      	ldr	r3, [pc, #24]	; (80002b4 <adc_read+0x20>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f003 0302 	and.w	r3, r3, #2
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f9      	beq.n	800029a <adc_read+0x6>
 80002a6:	4b03      	ldr	r3, [pc, #12]	; (80002b4 <adc_read+0x20>)
 80002a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002aa:	4618      	mov	r0, r3
 80002ac:	46bd      	mov	sp, r7
 80002ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002b2:	4770      	bx	lr
 80002b4:	40012000 	.word	0x40012000

080002b8 <main>:

uint32_t sensor_value;
uint32_t count = 0;
volatile int i ;

int main(void){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	af00      	add	r7, sp, #0

 	pa1_adc_init();
 80002bc:	f7ff ffa2 	bl	8000204 <pa1_adc_init>
	start_conversion();
 80002c0:	f7ff ffd2 	bl	8000268 <start_conversion>

	while(1){
		sensor_value = adc_read();
 80002c4:	f7ff ffe6 	bl	8000294 <adc_read>
 80002c8:	4603      	mov	r3, r0
 80002ca:	4a0b      	ldr	r2, [pc, #44]	; (80002f8 <main+0x40>)
 80002cc:	6013      	str	r3, [r2, #0]
		count = count + 5 ;
 80002ce:	4b0b      	ldr	r3, [pc, #44]	; (80002fc <main+0x44>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	3305      	adds	r3, #5
 80002d4:	4a09      	ldr	r2, [pc, #36]	; (80002fc <main+0x44>)
 80002d6:	6013      	str	r3, [r2, #0]
		for(i = 0 ; i <= 500 ; i++)
 80002d8:	4b09      	ldr	r3, [pc, #36]	; (8000300 <main+0x48>)
 80002da:	2200      	movs	r2, #0
 80002dc:	601a      	str	r2, [r3, #0]
 80002de:	e004      	b.n	80002ea <main+0x32>
 80002e0:	4b07      	ldr	r3, [pc, #28]	; (8000300 <main+0x48>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	3301      	adds	r3, #1
 80002e6:	4a06      	ldr	r2, [pc, #24]	; (8000300 <main+0x48>)
 80002e8:	6013      	str	r3, [r2, #0]
 80002ea:	4b05      	ldr	r3, [pc, #20]	; (8000300 <main+0x48>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80002f2:	ddf5      	ble.n	80002e0 <main+0x28>
		sensor_value = adc_read();
 80002f4:	e7e6      	b.n	80002c4 <main+0xc>
 80002f6:	bf00      	nop
 80002f8:	2000001c 	.word	0x2000001c
 80002fc:	20000020 	.word	0x20000020
 8000300:	20000024 	.word	0x20000024

08000304 <Reset_Handler>:
 8000304:	480d      	ldr	r0, [pc, #52]	; (800033c <LoopForever+0x2>)
 8000306:	4685      	mov	sp, r0
 8000308:	f3af 8000 	nop.w
 800030c:	480c      	ldr	r0, [pc, #48]	; (8000340 <LoopForever+0x6>)
 800030e:	490d      	ldr	r1, [pc, #52]	; (8000344 <LoopForever+0xa>)
 8000310:	4a0d      	ldr	r2, [pc, #52]	; (8000348 <LoopForever+0xe>)
 8000312:	2300      	movs	r3, #0
 8000314:	e002      	b.n	800031c <LoopCopyDataInit>

08000316 <CopyDataInit>:
 8000316:	58d4      	ldr	r4, [r2, r3]
 8000318:	50c4      	str	r4, [r0, r3]
 800031a:	3304      	adds	r3, #4

0800031c <LoopCopyDataInit>:
 800031c:	18c4      	adds	r4, r0, r3
 800031e:	428c      	cmp	r4, r1
 8000320:	d3f9      	bcc.n	8000316 <CopyDataInit>
 8000322:	4a0a      	ldr	r2, [pc, #40]	; (800034c <LoopForever+0x12>)
 8000324:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <LoopForever+0x16>)
 8000326:	2300      	movs	r3, #0
 8000328:	e001      	b.n	800032e <LoopFillZerobss>

0800032a <FillZerobss>:
 800032a:	6013      	str	r3, [r2, #0]
 800032c:	3204      	adds	r2, #4

0800032e <LoopFillZerobss>:
 800032e:	42a2      	cmp	r2, r4
 8000330:	d3fb      	bcc.n	800032a <FillZerobss>
 8000332:	f000 f811 	bl	8000358 <__libc_init_array>
 8000336:	f7ff ffbf 	bl	80002b8 <main>

0800033a <LoopForever>:
 800033a:	e7fe      	b.n	800033a <LoopForever>
 800033c:	20020000 	.word	0x20020000
 8000340:	20000000 	.word	0x20000000
 8000344:	20000000 	.word	0x20000000
 8000348:	080003c0 	.word	0x080003c0
 800034c:	20000000 	.word	0x20000000
 8000350:	20000028 	.word	0x20000028

08000354 <ADC_IRQHandler>:
 8000354:	e7fe      	b.n	8000354 <ADC_IRQHandler>
	...

08000358 <__libc_init_array>:
 8000358:	b570      	push	{r4, r5, r6, lr}
 800035a:	4d0d      	ldr	r5, [pc, #52]	; (8000390 <__libc_init_array+0x38>)
 800035c:	4c0d      	ldr	r4, [pc, #52]	; (8000394 <__libc_init_array+0x3c>)
 800035e:	1b64      	subs	r4, r4, r5
 8000360:	10a4      	asrs	r4, r4, #2
 8000362:	2600      	movs	r6, #0
 8000364:	42a6      	cmp	r6, r4
 8000366:	d109      	bne.n	800037c <__libc_init_array+0x24>
 8000368:	4d0b      	ldr	r5, [pc, #44]	; (8000398 <__libc_init_array+0x40>)
 800036a:	4c0c      	ldr	r4, [pc, #48]	; (800039c <__libc_init_array+0x44>)
 800036c:	f000 f818 	bl	80003a0 <_init>
 8000370:	1b64      	subs	r4, r4, r5
 8000372:	10a4      	asrs	r4, r4, #2
 8000374:	2600      	movs	r6, #0
 8000376:	42a6      	cmp	r6, r4
 8000378:	d105      	bne.n	8000386 <__libc_init_array+0x2e>
 800037a:	bd70      	pop	{r4, r5, r6, pc}
 800037c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000380:	4798      	blx	r3
 8000382:	3601      	adds	r6, #1
 8000384:	e7ee      	b.n	8000364 <__libc_init_array+0xc>
 8000386:	f855 3b04 	ldr.w	r3, [r5], #4
 800038a:	4798      	blx	r3
 800038c:	3601      	adds	r6, #1
 800038e:	e7f2      	b.n	8000376 <__libc_init_array+0x1e>
 8000390:	080003b8 	.word	0x080003b8
 8000394:	080003b8 	.word	0x080003b8
 8000398:	080003b8 	.word	0x080003b8
 800039c:	080003bc 	.word	0x080003bc

080003a0 <_init>:
 80003a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a2:	bf00      	nop
 80003a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a6:	bc08      	pop	{r3}
 80003a8:	469e      	mov	lr, r3
 80003aa:	4770      	bx	lr

080003ac <_fini>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr
